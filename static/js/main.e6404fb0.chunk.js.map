{"version":3,"sources":["DigitButton.js","OperationButton.js","App.js","reportWebVitals.js","index.js"],"names":["DigitButton","_ref","dispatch","digit","react_default","a","createElement","onClick","type","ACTIONS","ADD_DIGIT","payload","OpreationButton","operation","CHOOSE_OPERATION","DELETE_DIGIT","EVALUATE","CLEAR","reducer","state","overwrite","Object","objectSpread","currentOperand","prevdigit","concat","includes","previousOperand","evaluate","length","slice","_ref2","prev","parseFloat","curr","isNaN","computation","toString","App","_useReducer","useReducer","_useReducer2","slicedToArray","_useReducer2$","className","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.e6404fb0.chunk.js","sourcesContent":["import {ACTIONS} from './App'\r\nimport React, { Component }  from 'react';\r\n\r\nexport default function DigitButton({dispatch, digit}){\r\n    return <button \r\n    onClick={() =>dispatch({type: ACTIONS.ADD_DIGIT,payload: {digit}})}\r\n    >\r\n        {digit}\r\n    </button>;\r\n}","import {ACTIONS} from './App'\r\nimport React, { Component }  from 'react';\r\n\r\nexport default function OpreationButton({dispatch, operation}){\r\n    return <button \r\n    onClick={() =>dispatch({type: ACTIONS.CHOOSE_OPERATION,payload: {operation}})}\r\n    >\r\n        {operation}\r\n    </button>;\r\n}","import {useReducer} from \"react\"\nimport React, { Component }  from 'react';\nimport './index.css'\nimport DigitButton from './DigitButton'\nimport OpreationButton from \"./OperationButton\"\n\nexport const ACTIONS = {\n  ADD_DIGIT: 'add-digit',\n  CHOOSE_OPERATION: 'choose-operation',\n  DELETE_DIGIT: 'delete-digit',\n  EVALUATE: 'evaluate',\n  CLEAR: 'clear',\n}\n\nfunction reducer(state,{type,payload}){\n  \n  switch(type){\n    case ACTIONS.ADD_DIGIT:\n      if (state.overwrite && payload.digit !==\".\"){\n        return{\n          ...state,\n          currentOperand: payload.digit,\n          overwrite: false,\n        }\n      }\n      //if (payload.digit === \"0\" && state.currentOperand === null){return state}\n      if (payload.digit === \"0\" && state.currentOperand === \"0\"){return state}\n      if (payload.digit !== \"0\" && state.prevdigit === \"0\"){\n        return {\n          ...state,\n          currentOperand: `${payload.digit}`,\n          prevdigit: null,\n        }\n      }\n      \n      if (payload.digit === \".\" && state.prevdigit == null){return {\n        ...state,\n        currentOperand: null,\n      }}\n      if (payload.digit === \".\" && state.currentOperand.includes(\".\")){return state}\n      \n      return{\n        ...state,\n        currentOperand: `${state.currentOperand || \"\"}${payload.digit}`,\n        prevdigit: payload.digit,\n      }\n      \n    case ACTIONS.CHOOSE_OPERATION:\n      if(state.currentOperand == null && state.previousOperand==null)\n      {return state}\n      if(state.previousOperand == null)\n      {\n        return {\n          ...state,\n          operation: payload.operation,\n          previousOperand: state.currentOperand,\n          currentOperand: null,\n        }\n      }\n      if (state.currentOperand == null) {\n        return{\n          ...state,\n          operation: payload.operation,\n        }\n      }\n      return {\n        ...state,\n        previousOperand: evaluate(state),\n        operation: payload.operation,\n        currentOperand: null,\n        prevdigit: null,\n      }\n    \n    case ACTIONS.DELETE_DIGIT:\n      if (state.overwrite) {\n        return {\n          ...state,\n          overwrite: false,\n          currentOperand: null,\n          \n        }\n      }\n      if (state.currentOperand == null){return state}\n      if (state.currentOperand.length === 1){\n        return {\n          ...state,\n          currentOperand: null,\n          prevdigit: null,\n        }\n      }\n      return {\n        ...state,\n        currentOperand: state.currentOperand.slice(0,-1),\n        prevdigit: null,\n      }\n    case ACTIONS.EVALUATE:\n      if (\n        state.operation == null ||\n        state.currentOperand == null ||\n        state.previousOperand == null\n      ){\n        return state\n      }\n\n      return {\n        ...state,\n        overwrite: true,\n        previousOperand: null,\n        currentOperand: evaluate(state),\n        operation: null,\n        prevdigit: null,\n      }\n    case ACTIONS.CLEAR:\n      return {}\n    default:\n      return state\n  }\n\n}\n\nfunction evaluate({currentOperand,previousOperand,operation}){\n  const prev = parseFloat(previousOperand)\n  const curr = parseFloat(currentOperand)\n  if (isNaN(prev) || isNaN(curr)) return \"\"\n  let computation = \"\"\n  switch (operation){\n    case \"+\":\n      computation = prev + curr\n      break\n    case \"*\":\n      computation = prev * curr\n      break\n    case \"-\":\n      computation = prev - curr\n      break\n    case \"รท\":\n      computation = prev / curr\n      break\n    default:\n      break\n  }\n  return computation.toString()\n}\n\nfunction App() {\n  const [{currentOperand,previousOperand,operation},dispatch]=useReducer(\n    reducer,\n    {}\n    )\n  \n  return (\n    <div className='calc'>\n      <div className='output'>\n        <div className='previous-operand'>{previousOperand} {operation}</div>\n        <div className='current-operand'>{currentOperand}</div>\n      </div>\n      <button className='span-2' onClick={() => dispatch({type: ACTIONS.CLEAR})}>AC</button>\n      <button onClick={() => dispatch({type: ACTIONS.DELETE_DIGIT})}>DEL</button>\n      <OpreationButton operation=\"รท\" dispatch={dispatch}/>\n      <DigitButton digit=\"1\" dispatch={dispatch}/>\n      <DigitButton digit=\"2\" dispatch={dispatch}/>\n      <DigitButton digit=\"3\" dispatch={dispatch}/>\n      <OpreationButton operation=\"*\" dispatch={dispatch}/>\n      <DigitButton digit=\"4\" dispatch={dispatch}/>\n      <DigitButton digit=\"5\" dispatch={dispatch}/>\n      <DigitButton digit=\"6\" dispatch={dispatch}/>\n      <OpreationButton operation=\"+\" dispatch={dispatch}/>\n      <DigitButton digit=\"7\" dispatch={dispatch}/>\n      <DigitButton digit=\"8\" dispatch={dispatch}/>\n      <DigitButton digit=\"9\" dispatch={dispatch}/>\n      <OpreationButton operation=\"-\" dispatch={dispatch}/>\n      <DigitButton digit=\".\" dispatch={dispatch}/>\n      <DigitButton digit=\"0\" dispatch={dispatch}/>\n      <button className='span-2'  onClick={() => dispatch({type: ACTIONS.EVALUATE})}>=</button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}